{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.URL = 'http://localhost:3000'; //+Constants.API_VERSION\n  }\n\n  searchMovie(title) {\n    //will need to turn returned get data into movie\n    let url = this.URL + `/search/` + title;\n    console.log(url);\n    var ans = this.http.get(url);\n    console.log(\"SEARCHED=\", ans);\n    return ans;\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,QAAG,GAAY,uBAAuB,CAAC;EAER;;EAEvCC,WAAW,CAACC,KAAc;IACxB;IACA,IAAIC,GAAG,GAAG,IAAI,CAACC,GAAG,GAAC,UAAU,GAACF,KAAK;IACnCG,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,IAAII,GAAG,GAAG,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAML,GAAG,CAAC;IACjCE,OAAO,CAACC,GAAG,CAAC,WAAW,EAACC,GAAG,CAAC;IAC5B,OAAOA,GAAG;EACZ;;AAZWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["MovieService","constructor","http","searchMovie","title","url","URL","console","log","ans","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\asibi\\.vscode\\CS 402\\Final\\client\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { Observable } from 'rxjs';\nimport { movie } from '../models/movie';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private URL : String = 'http://localhost:3000';//+Constants.API_VERSION\n\n  constructor(private http: HttpClient) {}\n\n  searchMovie(title : string) : Observable<any>{//changed string to m[ovie]\n    //will need to turn returned get data into movie\n    let url = this.URL+`/search/`+title;\n    console.log(url);\n    var ans = this.http.get<any>(url);\n    console.log(\"SEARCHED=\",ans);\n    return ans;\n  }\n\n  /*\n  moviefy(data:any) : movie{\n    return MOVIE\n  }\n  */\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:3000\"; //+Constants.API_VERSION\n  }\n\n  searchMovie(title) {\n    //will need to turn returned get data into movie\n    console.log(this.URL + \"/search/\" + title);\n    var ans = this.http.get(this.URL + \"/search/\" + title);\n    console.log(\"SEARCHED=\", ans);\n    return ans;\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,QAAG,GAAY,uBAAuB,CAAC;EACP;;EAExCC,WAAW,CAACC,KAAc;IACxB;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,GAAG,GAAC,UAAU,GAACH,KAAK,CAAC;IACtC,IAAII,GAAG,GAAG,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,IAAI,CAACF,GAAG,GAAC,UAAU,GAACH,KAAK,CAAC;IAC1DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACE,GAAG,CAAC;IAC5B,OAAOA,GAAG;EACZ;;AAVWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFX;AAAM","names":["MovieService","constructor","http","searchMovie","title","console","log","URL","ans","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\asibi\\.vscode\\CS 402\\Final\\client\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { Observable } from 'rxjs';\nimport { movie } from '../models/movie';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private URL : string = \"http://localhost:3000\";//+Constants.API_VERSION\n  constructor(private http: HttpClient) { }\n\n  searchMovie(title : string) : Observable<String>{//changed string to m[ovie]\n    //will need to turn returned get data into movie\n    console.log(this.URL+\"/search/\"+title);\n    var ans = this.http.get<String>(this.URL+\"/search/\"+title);\n    console.log(\"SEARCHED=\",ans);\n    return ans;\n  }\n\n  /*\n  moviefy(data:any) : movie{\n    return MOVIE\n  }\n  */\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}